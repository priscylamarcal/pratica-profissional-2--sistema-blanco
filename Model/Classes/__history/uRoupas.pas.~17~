unit uRoupas;

interface

uses uPai, uGruposRoupas, uMarcas, uTamanhos, uFornecedores, uColecoes, uCores,
uVariacoesRoupas, System.Generics.Collections;

type Roupas = class( Pai )
  private
  protected
    descricao    : string[80];
    unidade_medida   : string[80];
    cod_barra    : string[50];
    referencia   : string[50];
    umGrupoRoupa : GruposRoupas;
    umaMarca     : Marcas;
    custo_unitario  : currency;
    lucro        : currency;
    valor_venda  : currency;
    umaCor       : Cores;
    umTamanho    : Tamanhos;
    codigoRoupa       : string[6];
    umFornecedor : Fornecedores;
    qtdTotalRoupa : integer;
    umaColecao   : Colecoes;
    obs          : string[250];
    ListaVariacoes: TObjectList<VariacaoRoupa>;
  public
    constructor crieObj;
    destructor destrua_se;

    procedure setDescricao ( pDescricao : string );
    procedure setUnidadeMedida ( pUnidadeMedida : string );
    procedure setCodBarra ( pCodBarra : string );
    procedure setReferencia ( pReferencia : string );
    procedure setoGrupoRoupa ( poGrupoRoupa : GruposRoupas );
    procedure setaMarca ( paMarca : Marcas );
    procedure setCustoUnitario ( pCustoUnitario : currency );
    procedure setLucro ( pLucro : currency );
    procedure setValorVenda ( pValorVenda : currency );
    procedure setaCor ( paCor : Cores );
    procedure setoTamanho ( poTamanho : Tamanhos );
    procedure setCodigoRoupa ( pCodigoRoupa : string );
    procedure setQtdTotalRoupa ( pQtdTotalRoupa : integer );
    procedure setoFornecedor ( poFornecedor : Fornecedores );
    procedure setaColecao ( paColecao : Colecoes );
    procedure setObs ( pObs : string );
    procedure setListaVariacao ( pListaVariacao: TObjectList<VariacaoRoupa>);

    function getDescricao : string;
    function getUnidadeMedida : string;
    function getCodBarra : string;
    function getReferencia : string;
    function getoGrupoRoupa : GruposRoupas;
    function getaMarca : Marcas;
    function getCustoUnitario : currency;
    function getLucro : currency;
    function getValorVenda : currency;
    function getaCor : Cores;
    function getoTamanho : Tamanhos;
    function getCodigoRoupa : string;
    function getQtdTotalRoupa : integer;
    function getoFornecedor : Fornecedores;
    function getaColecao : Colecoes;
    function getObs : string;
    function getListaVariacao: TObjectList<VariacaoRoupa>;

    function clone : Roupas;
    procedure limparDados;
end;

implementation

{ Roupas }

constructor Roupas.crieObj;
begin
  inherited;

  umGrupoRoupa  := GruposRoupas.crieObj;
  umaMarca      := Marcas.crieObj;

  umaCor        := Cores.crieObj;
  umTamanho     := Tamanhos.crieObj;
  umFornecedor  := Fornecedores.crieObj;
  umaColecao    := Colecoes.crieObj;
  ListaVariacoes := TObjectList<VariacaoRoupa>.create;
  self.limparDados;

end;

destructor Roupas.destrua_se;
begin
  umGrupoRoupa.destrua_se;
  umaMarca.destrua_se;
  umaCor.destrua_se;
  umTamanho.destrua_se;
  umFornecedor.destrua_se;
  umaColecao.destrua_se;
  ListaVariacoes.Destroy;
end;

function Roupas.getaColecao: Colecoes;
begin
  Result:= umaColecao;
end;

function Roupas.getaCor: Cores;
begin
  Result:= umaCor;
end;

function Roupas.getaMarca: Marcas;
begin
  Result:= umaMarca;
end;

function Roupas.getCodBarra: string;
begin
  Result:= cod_barra;
end;

function Roupas.getCodigoRoupa: string;
begin
  Result:= codigoRoupa;
end;

function Roupas.getDescricao: string;
begin
  Result:= descricao;
end;

function Roupas.getListaVariacao: TObjectList<VariacaoRoupa>;
begin
  result := ListaVariacoes;
end;

function Roupas.getLucro: currency;
begin
  Result:= lucro;
end;

function Roupas.getObs: string;
begin
  Result:= obs;
end;

function Roupas.getoFornecedor: Fornecedores;
begin
  Result:= umFornecedor;
end;

function Roupas.getoGrupoRoupa: GruposRoupas;
begin
  Result:= umGrupoRoupa;
end;

function Roupas.getoTamanho: Tamanhos;
begin
  Result:= umTamanho;
end;

function Roupas.getQtdTotalRoupa: integer;
begin
  Result:= qtdTotalRoupa;
end;

function Roupas.getReferencia: string;
begin
  Result:= referencia;
end;

function Roupas.getUnidadeMedida: string;
begin
  Result:= unidade_medida;
end;

function Roupas.getCustoUnitario: currency;
begin
  Result:= custo_unitario;
end;

function Roupas.getValorVenda: currency;
begin
  Result:= valor_venda;
end;

procedure Roupas.limparDados;
begin
 inherited;
 obs           := '';
 //valor_custo   := 0;
 custo_unitario   := 0;
 lucro         := 0;
 valor_venda   := 0;
 descricao     := '';
 cod_barra     := '';
 referencia    := '';
 umGrupoRoupa.limparDados;
 umaMarca.limparDados;
 umaCor.limparDados;
 umTamanho.limparDados;
 umFornecedor.limparDados;
 umaColecao.limparDados;
 ListaVariacoes.clear;
end;

procedure Roupas.setaColecao(paColecao: Colecoes);
begin
  umaColecao:= paColecao;
end;

procedure Roupas.setaCor(paCor: Cores);
begin
  umaCor:= paCor;
end;

procedure Roupas.setaMarca(paMarca: Marcas);
begin
  umaMarca:= paMarca;
end;

procedure Roupas.setCodBarra(pCodBarra: string);
begin
  cod_barra:= pCodBarra;
end;

procedure Roupas.setCodigoRoupa(pCodigoRoupa: string);
begin
  codigoRoupa:= pCodigoRoupa;
end;

procedure Roupas.setDescricao(pDescricao: string);
begin
  descricao:= pDescricao;
end;

procedure Roupas.setListaVariacao(pListaVariacao: TObjectList<VariacaoRoupa>);
begin
  ListaVariacoes := pListaVariacao;
end;

procedure Roupas.setLucro(pLucro: currency);
begin
  lucro:= pLucro;
end;

procedure Roupas.setObs(pObs: string);
begin
  obs:= pObs;
end;

procedure Roupas.setoFornecedor(poFornecedor: Fornecedores);
begin
  umFornecedor:= poFornecedor;
end;

procedure Roupas.setoGrupoRoupa(poGrupoRoupa: GruposRoupas);
begin
  umGrupoRoupa:= poGrupoRoupa;
end;

procedure Roupas.setoTamanho(poTamanho: Tamanhos);
begin
  umTamanho:= poTamanho;
end;

procedure Roupas.setQtdTotalRoupa(pQtdTotalRoupa: integer);
begin
  qtdTotalRoupa:= pQtdTotalRoupa;
end;

procedure Roupas.setReferencia(pReferencia: string);
begin
  referencia:= pReferencia;
end;

procedure Roupas.setUnidadeMedida(pUnidadeMedida: string);
begin
  unidade_medida:= pUnidadeMedida;
end;

procedure Roupas.setCustoUnitario(pCustoUnitario: currency);
begin
  custo_unitario:= pCustoUnitario;
end;

procedure Roupas.setValorVenda(pValorVenda: currency);
begin
  valor_venda:= pValorVenda;
end;

function Roupas.clone: Roupas;
begin
  Result:= Roupas.crieObj;
  Result.setCodigo( codigo );
  Result.setDataCad( dataCad );
  Result.setUltAlt( ultAlt );
  Result.setCodUsu( codUsu );
  Result.setDescricao( descricao );
  Result.setUnidadeMedida( unidade_medida );
  Result.setCodBarra( cod_barra );
  Result.setReferencia( referencia );
  Result.setoGrupoRoupa( umGrupoRoupa.clone );
  Result.setaMarca( umaMarca.clone );
  Result.setCustoUnitario( custo_unitario );
  Result.setLucro( lucro );
  Result.setValorVenda( valor_venda );
  Result.setaCor( umaCor.clone );
  Result.setoTamanho( umTamanho.clone );
  Result.setCodigoRoupa( codigoRoupa );
  Result.setQtdTotalRoupa( qtdTotalRoupa );
  Result.setoFornecedor( umFornecedor.clone );
  Result.setaColecao( umaColecao.clone );
  Result.setObs( obs );
end;


end.
