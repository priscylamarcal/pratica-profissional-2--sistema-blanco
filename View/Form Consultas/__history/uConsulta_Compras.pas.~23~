unit uConsulta_Compras;
interface
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uConsultaPai, Data.DB, Vcl.Grids,
  Vcl.DBGrids, Vcl.Buttons, Vcl.StdCtrls, campoEdit, ComboBox, Vcl.ExtCtrls,
  uCadastro_Compras, uCompras, uCtrlCompras, uFilterSearch;
type
  Tform_consulta_compras = class(Tform_consulta_pai)
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    oCadastroCompra : Tform_cadastro_compras;
    aCompra : Compras;
    aCtrlCompra : ctrlCompras;
  public
    { Public declarations }
    procedure novo;                                           override;
    procedure alterar;                                        override;
    procedure excluir;                                        override;
    procedure sair;                                           override;
    procedure pesquisar;                                      override;
    procedure conhecaObj ( pCtrl : TObject; pObj : TObject ); override;
    procedure setFrmCadastro ( pObj : TObject );                  override;
    procedure tipoFiltro;                                     override;
  end;
var
  form_consulta_compras: Tform_consulta_compras;
implementation
{$R *.dfm}
procedure Tform_consulta_compras.alterar;
var form : Tform_cadastro_Compras;
begin
  inherited;
  oCadastroCompra.limpaEdt;
  aCtrlCompra.carregar( aCompra );
  oCadastroCompra.conhecaObj( aCtrlCompra, aCompra );
  oCadastroCompra.Caption:= 'Alteração de Compra';
  oCadastroCompra.ShowModal;
  if form.salvou then
    Self.pesquisar;      inherited;
end;
procedure Tform_consulta_compras.conhecaObj(pCtrl, pObj: TObject);
begin
  inherited;
  aCompra:= Compras( pObj );
  aCtrlCompra:= ctrlCompras( pCtrl );
  self.DBGrid.DataSource:= TDataSource( aCtrlCompra.getDS );
end;
procedure Tform_consulta_compras.excluir;
var mCaption: string;
begin
  inherited;
  aCtrlCompra.carregar(aCompra);
  mCaption := oCadastroCompra.btn_botao_salvar.caption;
  oCadastroCompra.btn_botao_salvar.caption := 'Excluir';
  oCadastroCompra.conhecaObj( aCtrlCompra, aCompra );
  oCadastroCompra.Caption:= 'Exclusão de Compra';
  oCadastroCompra.bloqueiaEdt;
 // oCadastroCompra.bloqueaiaBtnPesquisa;
  oCadastroCompra.ShowModal;
  oCadastroCompra.btn_botao_salvar.caption := mCaption;
  oCadastroCompra.desbloqueiaEdt;
  //oCadastroCompra.desbloqueiaBtnPesquisa;
end;
procedure Tform_consulta_compras.FormShow(Sender: TObject);
begin
  inherited;
  combobox_tipo_filtro.ItemIndex:= 0;
  edt_pesquisa.Clear;
  self.pesquisar;   inherited;
end;

procedure Tform_consulta_compras.novo;
var form: Tform_cadastro_Compras;
begin
  inherited;
  aCompra.limparDados;
  oCadastroCompra.conhecaObj( aCtrlCompra, aCompra );
  oCadastroCompra.limpaEdt;
  oCadastroCompra.Caption:= 'Cadastro de Compra';
  oCadastroCompra.ShowModal;
  if form.salvou then
    Self.pesquisar;      inherited;
end;
procedure Tform_consulta_compras.pesquisar;
var vFilter : TFilterSearch;
    pchave : string;
begin
  inherited;
  VFilter   := TFilterSearch.Create;
  try
    Try
     case combobox_tipo_filtro.ItemIndex of
//      0:
//        begin
//          if edt_pesquisa.Text = '' then
//          begin
//            MessageDlg( 'Campo do filtro não pode ser vazio!', MtInformation, [ MbOK ], 0 );
//            edt_pesquisa.SetFocus;
//           Exit;
//          end;
//          vFilter.TipoConsulta:= TpCCodigo;
//          vFilter.Codigo:= StrToInt(edt_pesquisa.Text);
//        end;
//    1:
//        begin
//          if Length( edt_pesquisa.Text ) < 3 then
//          begin
//            MessageDlg( 'Digite ao menos 3 caracteres para consulta!', MtInformation, [ MbOK ], 0 );
//            edt_pesquisa.SetFocus;
//            Exit;
//          end;
//          VFilter.TipoConsulta := TpCParam;
//          VFilter.Parametro    := Uppercase( edt_pesquisa.Text );
//        end;
      0:
        begin
          VFilter.TipoConsulta := TpCTODOS;
        end;
    end;
  finally
    aCtrlCompra.pesquisar(VFilter, pchave);
    VFilter.Free;
  end;
    Except
//    on e: exception do
//    ShowMessage(e.ClassName +'asdfasdfasdf');
    End;
end;
procedure Tform_consulta_compras.sair;
begin
  inherited;
end;
procedure Tform_consulta_compras.setFrmCadastro(pObj: TObject);
var form : Tform_cadastro_compras;
begin
  inherited;
  oCadastroCompra := Tform_cadastro_compras( pObj );
  if form.salvou then
    Self.pesquisar;      inherited;
end;
procedure Tform_consulta_compras.tipoFiltro;
begin
  inherited;
    case combobox_tipo_filtro.ItemIndex of
    0:  //código
      begin
        edt_pesquisa.TextHint:= 'DIGITE AQUI PARA CONSULTAR POR CÓDIGO!';
        edt_pesquisa.NumbersOnly:= true;
        edt_pesquisa.Enabled:= true;
        edt_pesquisa.Clear;
      end;
    1:  //roupa
      begin
        edt_pesquisa.TextHint:= 'DIGITE AQUI PARA CONSULTAR POR ROUPA!';
        edt_pesquisa.NumbersOnly:= false;
        edt_pesquisa.Enabled:= true;
        edt_pesquisa.Clear;
      end;
    2: //todos
      begin
        edt_pesquisa.NumbersOnly:= false;
        edt_pesquisa.Enabled:= false;
        edt_pesquisa.Clear;
      end;
  end;
end;
end.
