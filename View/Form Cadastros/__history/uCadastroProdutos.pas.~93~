unit uCadastroProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uCadastroPai, Vcl.Buttons, Vcl.StdCtrls,
  campoEdit, Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.Imaging.pngimage,
  Vcl.ComCtrls, uRoupas, uCtrlRoupas, uConsulta_Colecoes, uConsulta_Cores,
  uConsulta_Fornecedores, uConsulta_GruposProdutos, uConsulta_Marcas,
  uConsulta_Tamanhos, Datasnap.DBClient, uVariacoesRoupas;

type
  Tform_cadastro_produtos = class(Tform_cadastro_pai)
    edt_descricao_produto: PriTEdit;
    lbl_descricao_produto: TLabel;
    edt_referencia: PriTEdit;
    edt_cod_barra: PriTEdit;
    lbl_referencia: TLabel;
    lbl_cod_barra: TLabel;
    lbl_grupo_produtos: TLabel;
    lbl_marca: TLabel;
    edt_pesquisar_grupoProduto_produto: PriTEdit;
    pnl_btn_pesquisa_grupoProduto: TPanel;
    btn_pesquisa_grupoProduto: TSpeedButton;
    lbl_titulo_dados_produtos: TLabel;
    edt_pesquisar_marca_produto: PriTEdit;
    pnl_btn_pesquisa_marca: TPanel;
    btn_pesquisa_marca: TSpeedButton;
    lbl_titulo_valores: TLabel;
    edt_valor_custo: PriTEdit;
    edt_lucro: PriTEdit;
    edt_valor_venda: PriTEdit;
    lbl_valor_custo: TLabel;
    lbl_lucro: TLabel;
    lbl_valor_venda: TLabel;
    lbl_variacoes_produto: TLabel;
    edt_pesquisar_cor: PriTEdit;
    pnl_btn_pesquisa_cor: TPanel;
    btn_pesquisa_cor: TSpeedButton;
    edt_pesquisar_tamanho: PriTEdit;
    pnl_btn_pesquisa_tamanho: TPanel;
    btn_pesquisa_tamanho: TSpeedButton;
    lbl_cor: TLabel;
    lbl_tamanho: TLabel;
    edt_quant_total_produtos: PriTEdit;
    lbl_qtd_total_produtos: TLabel;
    edt_pesquisar_registro: PriTEdit;
    pnl_btn_pesquisa: TPanel;
    btn_pesquisa: TSpeedButton;
    edt_colecao: PriTEdit;
    pbl_botao_pesquisa_colecao: TPanel;
    btn_pesquisa_colecao: TSpeedButton;
    lbl_fornecedor: TLabel;
    lbl_colecao: TLabel;
    lbl_observacoes: TLabel;
    memo_obs: TMemo;
    lbl_cod_grupo_produto: TLabel;
    edt_cod_grupo_produto: PriTEdit;
    lbl_cod_marca: TLabel;
    edt_cod_marca: PriTEdit;
    lbl_cod_cor: TLabel;
    edt_cod_cor: PriTEdit;
    lbl_cod_tamanho: TLabel;
    edt_cod_tamanho: PriTEdit;
    lbl_cod_fornecedor: TLabel;
    edt_cod_fornecedor: PriTEdit;
    lbl_cod_colecao: TLabel;
    edt_cod_colecao: PriTEdit;
    pbl_limpar_grid: TPanel;
    btn_limpar_grid: TSpeedButton;
    pnl_botao_excluir_item: TPanel;
    btn_botao_excluir_variacao: TSpeedButton;
    pnl_botao_alterar: TPanel;
    btn_botao_alterar_variacao: TSpeedButton;
    pnl_adicionar_contato: TPanel;
    btn_adicionar_variacao: TSpeedButton;
    edt_unidade_medida: PriTEdit;
    lbl_unidade_medida: TLabel;
    edt_codigo_roupa: PriTEdit;
    lbl_codigo_roupa: TLabel;
    GridVariacoes: TDBGrid;
    dsVariacoes: TDataSource;
    cdsVariacoes: TClientDataSet;
    cdsVariacoesnum_variacao: TIntegerField;
    cdsVariacoesid_cor: TIntegerField;
    cdsVariacoescor: TStringField;
    cdsVariacoesid_tamanho: TIntegerField;
    cdsVariacoestamanho: TStringField;
    cdsVariacoescodigo: TStringField;
    procedure btn_pesquisa_grupoProdutoClick(Sender: TObject);
    procedure btn_pesquisa_marcaClick(Sender: TObject);
    procedure btn_pesquisa_corClick(Sender: TObject);
    procedure btn_pesquisa_tamanhoClick(Sender: TObject);
    procedure btn_pesquisaClick(Sender: TObject);
    procedure btn_pesquisa_colecaoClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure edt_valor_custoChange(Sender: TObject);
    procedure edt_lucroChange(Sender: TObject);
    procedure btn_adicionar_variacaoClick(Sender: TObject);
    procedure btn_botao_alterar_variacaoClick(Sender: TObject);
    procedure btn_botao_excluir_variacaoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);

  private
    { Private declarations }

    aRoupa : Roupas;
    aCtrlRoupas : ctrlRoupas;
    Alterar: boolean;

    aConsultaGruposProdutos : Tform_consulta_grupos_produtos;
    aConsultaMarcas : Tform_consulta_marcas;
    aConsultaCores : Tform_consulta_cores;
    aConsultaTamanhos : Tform_consulta_tamanhos;
    aConsultaFornecedores : Tform_consulta_fornecedores;
    aConsultaColecoes : Tform_consulta_colecoes;
    procedure AtualizarContagem;
  public
    { Public declarations }
    procedure conhecaObj ( pCtrl, pObj : TObject );  override;
    procedure salvar;         override;
    procedure sair;           override;
    procedure limpaEdt;       override;
    procedure carregaEdt;     override;
    procedure bloqueiaEdt;    override;
    procedure desbloqueiaEdt; override;
    procedure bloqueaiaBtnPesquisa;
    procedure desbloqueiaBtnPesquisa;

    function validaFormulario : Boolean; override;

    procedure setFrmConsultaGruposProdutos ( pConsulta : TObject );
    procedure setFrmConsultaMarcas ( pConsulta : TObject );
    procedure setFrmConsultaCores ( pConsulta : TObject );
    procedure setFrmConsultaTamanhos ( pConsulta : TObject );
    procedure setFrmConsultaFornecedores ( pConsulta : TObject );
    procedure setFrmConsultaColecoes ( pConsulta : TObject );

    procedure adicionarItens(pEdit: boolean);
    procedure limparItens;
    procedure AlterarItem;
    procedure ExcluirItem;
    procedure bloquearItens(pBloq: boolean);
    procedure ExcluirColuna(pColuna: string);

    procedure calculaValorVenda;
  end;

var
  form_cadastro_produtos: Tform_cadastro_produtos;

implementation

{$R *.dfm}

{ Tform_cadastro_produtos }

procedure Tform_cadastro_produtos.adicionarItens( pEdit: boolean);
  function validaItens: Boolean;
  begin
    result := false;

    if (Self.edt_cod_cor.Text = '') or (Self.edt_pesquisar_cor.text = '') then
    begin
      MessageDlg( 'Selecione a cor da variação!', MtInformation, [ MbOK ], 0 );
      Exit;
    end;

    if (Self.edt_cod_tamanho.Text = '') or (Self.edt_pesquisar_tamanho.text = '') then
    begin
      MessageDlg( 'Selecione o tamanho da variação!', MtInformation, [ MbOK ], 0 );
      Exit;
    end;

    if (Self.edt_codigo_roupa.Text = '') then
    begin
      MessageDlg( 'O campo código é obrigatório!', MtInformation, [ MbOK ], 0 );
      Self.edt_codigo_roupa.setFocus;
      Exit;
    end;

    result := true;
  end;
  procedure adicionarColuna(pColuna: string);
  var i: integer;
      Existe: boolean;
      Col: TColumn;
  begin
    existe := False;
    for I := 0 to GridVariacoes.Columns.Count - 1 do
       existe := GridVariacoes.Columns[i].Title.Caption = pColuna;

    if not Existe then
    begin
       Col := GridVariacoes.Columns.Add;
       Col.Title.Caption := pColuna;
    end;
  end;
begin
   if validaItens then
   begin
      if pEdit then
      begin
        cdsVariacoes.Edit;
        cdsVariacoesNUM_VARIACAO.AsInteger := cdsVariacoes.RecNo;
      end
      else
      begin
        cdsVariacoes.Append;
        cdsVariacoesNUM_VARIACAO.AsInteger := cdsVariacoes.RecordCount + 1;
      end;

      cdsVariacoesID_COR.AsInteger := StrToInt(edt_cod_cor.text);
      cdsVariacoesCOR.AsString := edt_pesquisar_cor.text;
      cdsVariacoesID_TAMANHO.AsInteger := StrToInt(edt_cod_tamanho.text);
      cdsVariacoesTAMANHO.asString := edt_pesquisar_tamanho.text;
      cdsVariacoesCODIGO.asString := edt_codigo_roupa.text;
      cdsVariacoes.Post;
      adicionarColuna(edt_codigo_roupa.text);
      limparItens;
   end
end;

procedure Tform_cadastro_produtos.AlterarItem;
begin
   if cdsVariacoes.RecordCount > 0 then
   begin
      if Alterar then
      begin
        edt_cod_cor.text := IntToStr(cdsVariacoesID_COR.AsInteger);
        edt_pesquisar_cor.text := cdsVariacoesCOR.AsString;
        edt_cod_tamanho.text := InttoStr(cdsVariacoesID_TAMANHO.AsInteger);
        edt_pesquisar_tamanho.text := cdsVariacoesTAMANHO.asString;
        edt_codigo_roupa.text := cdsVariacoesCODIGO.asString;
        alterar := false;
      end
      else
      begin

        adicionarItens(true);
        alterar := true;
      end;
      bloquearItens(alterar);
   end
   else
     MessageDlg( 'Lista de variações está vazia!', MtInformation, [ MbOK ], 0 );
end;

procedure Tform_cadastro_produtos.AtualizarContagem;
begin
  Self.edt_quant_total_produtos.Text := IntToStr(cdsVariacoes.RecordCount - 1);
end;

procedure Tform_cadastro_produtos.bloqueaiaBtnPesquisa;
begin
  self.btn_pesquisa_grupoProduto.Visible:= False;
  self.btn_pesquisa_marca.Visible:= False;
  self.btn_pesquisa_cor.Visible:= False;
  self.btn_pesquisa_tamanho.Visible:= False;
  self.btn_pesquisa.Visible:= False;
  self.btn_pesquisa_colecao.Visible:= False;

  self.btn_adicionar_variacao.Enabled:= False;
  self.btn_botao_alterar_variacao.Enabled:= False;
  self.btn_botao_excluir_variacao.Enabled:= False;
  self.btn_limpar_grid.Enabled:= False;
end;

procedure Tform_cadastro_produtos.bloquearItens(pBloq: boolean);
begin
  GridVariacoes.Enabled := pBloq;
  btn_adicionar_variacao.Enabled := pBloq;
  btn_botao_excluir_variacao.Enabled := pBloq;
end;

procedure Tform_cadastro_produtos.bloqueiaEdt;
begin
  inherited;
  self.edt_descricao_produto.Enabled:= False;
  self.edt_cod_barra.Enabled:= False;
  self.edt_referencia.Enabled:= False;
  self.edt_cod_grupo_produto.Enabled:= False;
  self.edt_pesquisar_grupoProduto_produto.Enabled:= False;
  self.edt_cod_marca.Enabled:= False;
  self.edt_pesquisar_marca_produto.Enabled:= False;
  self.edt_valor_custo.Enabled:= False;
  self.edt_lucro.Enabled:= False;
  self.edt_valor_venda.Enabled:= False;
  self.edt_cod_cor.Enabled:= False;
  self.edt_pesquisar_cor.Enabled:= False;
  self.edt_cod_tamanho.Enabled:= False;
  self.edt_pesquisar_tamanho.Enabled:= False;
  self.edt_cod_fornecedor.Enabled:= False;
  self.edt_pesquisar_registro.Enabled:= False;
  self.edt_cod_colecao.Enabled:= False;
  self.edt_colecao.Enabled:= False;
  self.memo_obs.Enabled:= False;
  self.edt_unidade_medida.Enabled:= False;
  self.edt_codigo_roupa.Enabled:= False;
end;

procedure Tform_cadastro_produtos.btn_adicionar_variacaoClick(Sender: TObject);
begin
  inherited;
  adicionarItens(false);
  AtualizarContagem;
end;

procedure Tform_cadastro_produtos.btn_botao_alterar_variacaoClick(
  Sender: TObject);
begin
  inherited;
  AlterarItem;
end;

procedure Tform_cadastro_produtos.btn_botao_excluir_variacaoClick(
  Sender: TObject);
begin
  inherited;
  ExcluirItem;
  AtualizarContagem;
end;

procedure Tform_cadastro_produtos.btn_pesquisaClick(Sender: TObject);
var aux : string;
begin
  aConsultaFornecedores.conhecaObj( aCtrlRoupas.getCtrlFornecedores, aRoupa.getoFornecedor );
  aux := aConsultaFornecedores.btn_botao_sair.Caption;
  aConsultaFornecedores.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaFornecedores.ShowModal;
  aConsultaFornecedores.btn_botao_sair.Caption:= aux;

  self.edt_cod_fornecedor.Text:= IntToStr( aRoupa.getoFornecedor.getCodigo );
  self.edt_pesquisar_registro.Text:= aRoupa.getoFornecedor.getNomeRazaoSocial;
end;

procedure Tform_cadastro_produtos.btn_pesquisa_corClick(Sender: TObject);
var aux : string;
begin
  aConsultaCores.conhecaObj( aCtrlRoupas.getCtrlCores, aRoupa.getaCor );
  aux := aConsultaCores.btn_botao_sair.Caption;
  aConsultaCores.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaCores.ShowModal;
  aConsultaCores.btn_botao_sair.Caption:= aux;

  self.edt_cod_cor.Text:= IntToStr( aRoupa.getaCor.getCodigo );
  self.edt_pesquisar_cor.Text:= aRoupa.getaCor.getCor;
end;

procedure Tform_cadastro_produtos.btn_pesquisa_grupoProdutoClick(
  Sender: TObject);
var aux : string;
begin
  aConsultaGruposProdutos.conhecaObj( aCtrlRoupas.getCtrlGruposProdutos, aRoupa.getoGrupoRoupa );
  aux := aConsultaGruposProdutos.btn_botao_sair.Caption;
  aConsultaGruposProdutos.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaGruposProdutos.ShowModal;
  aConsultaGruposProdutos.btn_botao_sair.Caption:= aux;

  self.edt_cod_grupo_produto.Text:= IntToStr( aRoupa.getoGrupoRoupa.getCodigo );
  self.edt_pesquisar_grupoProduto_produto.Text:= aRoupa.getoGrupoRoupa.getGrupoRoupa;

end;

procedure Tform_cadastro_produtos.btn_pesquisa_marcaClick(Sender: TObject);
var aux : string;
begin
  aConsultaMarcas.conhecaObj( aCtrlRoupas.getCtrlMarcas, aRoupa.getaMarca );
  aux := aConsultaMarcas.btn_botao_sair.Caption;
  aConsultaMarcas.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaMarcas.ShowModal;
  aConsultaMarcas.btn_botao_sair.Caption:= aux;

  self.edt_cod_marca.Text:= IntToStr( aRoupa.getaMarca.getCodigo );
  self.edt_pesquisar_marca_produto.Text:= aRoupa.getaMarca.getMarca;
end;

procedure Tform_cadastro_produtos.btn_pesquisa_tamanhoClick(Sender: TObject);
var aux : string;
begin
  aConsultaTamanhos.conhecaObj( aCtrlRoupas.getCtrlTamanhos, aRoupa.getoTamanho );
  aux := aConsultaTamanhos.btn_botao_sair.Caption;
  aConsultaTamanhos.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaTamanhos.ShowModal;
  aConsultaTamanhos.btn_botao_sair.Caption:= aux;

  self.edt_cod_tamanho.Text:= IntToStr( aRoupa.getoTamanho.getCodigo );
  self.edt_pesquisar_tamanho.Text:= aRoupa.getoTamanho.getSiglaTamanho;
end;

procedure Tform_cadastro_produtos.calculaValorVenda;
var valorCusto, lucro: currency;
begin
  if (Self.edt_valor_custo.text <> '') and (Self.edt_lucro.text <> '') then
  begin
    valorCusto := StrtoFloat(Self.edt_valor_custo.text);
    lucro      := StrtoFloat(Self.edt_lucro.text);
    Self.edt_valor_venda.Text := FloatToStr(valorCusto + (valorCusto * lucro / 100));
  end;
end;

procedure Tform_cadastro_produtos.carregaEdt;
var variacao: VariacaoRoupa;
begin
  inherited;

  if aRoupa.getCodigo <> 0 then
     self.edt_codigo.Text:= IntToStr( aRoupa.getCodigo );

  self.edt_descricao_produto.Text:= aRoupa.getDescricao;
  self.edt_cod_barra.Text:= aRoupa.getCodBarra;
  self.edt_referencia.Text:= aRoupa.getReferencia;
  self.edt_cod_grupo_produto.Text:= IntToStr (aRoupa.getoGrupoRoupa.getCodigo);
  self.edt_pesquisar_grupoProduto_produto.Text:= aRoupa.getoGrupoRoupa.getGrupoRoupa;
  self.edt_cod_marca.Text:= IntToStr( aRoupa.getaMarca.getCodigo );
  self.edt_pesquisar_marca_produto.Text:= aRoupa.getaMarca.getMarca;
  self.edt_valor_custo.Text:= FloatToStr( aRoupa.getCustoUnitario );
  self.edt_lucro.Text:= FloatToStr( aRoupa.getLucro );
  self.edt_valor_venda.Text:= FloatToStr( aRoupa.getValorVenda );
  //self.edt_cod_cor.Text:= IntToStr( aRoupa.getaCor.getCodigo );
  //self.edt_pesquisar_cor.Text:= aRoupa.getaCor.getCor;
  //self.edt_cod_tamanho.Text:= IntToStr( aRoupa.getoTamanho.getCodigo );
  //self.edt_pesquisar_tamanho.Text:= aRoupa.getoTamanho.getSiglaTamanho;
  self.edt_cod_fornecedor.Text:= IntToStr( aRoupa.getoFornecedor.getCodigo );
  self.edt_pesquisar_registro.Text:= aRoupa.getoFornecedor.getNomeRazaoSocial;
  self.edt_cod_colecao.Text:= IntToStr( aRoupa.getaColecao.getCodigo );
  self.edt_colecao.Text:= aRoupa.getaColecao.getColecao;
  self.memo_obs.Text:= aRoupa.getObs;
  self.edt_data_cadastro.Text:= DateToStr( aRoupa.getDataCad);
  self.edt_data_ult_alt.Text:= DateToStr(aRoupa.getUltAlt);
  self.edt_unidade_medida.text  := aRoupa.getUnidadeMedida;

  for Variacao in aRoupa.getListaVariacao do
  begin
    cdsVariacoes.Append;
    cdsVariacoes.FieldByName('Num_variacao').AsInteger := Variacao.getaNumeroVariacao;
    cdsVariacoes.FieldByName('id_cor').AsInteger       := Variacao.getaCor.getCodigo;
    cdsVariacoes.FieldByName('cor').AsString           := Variacao.getaCor.getCor;
    cdsVariacoes.FieldByName('id_tamanho').AsInteger   := Variacao.getaTamanho.getCodigo;
    cdsVariacoes.FieldByName('tamanho').AsString       := Variacao.getaTamanho.getSiglaTamanho;
    cdsVariacoes.FieldByName('codigo').AsString        := Variacao.getacodigoVariacao;
    cdsVariacoes.Post;
  end;
  cdsVariacoes.First;
  cdsVariacoes.EnableControls;
end;

procedure Tform_cadastro_produtos.conhecaObj(pCtrl, pObj: TObject);
begin
  inherited;
  aRoupa:= Roupas( pObj );
  aCtrlRoupas:= ctrlRoupas( pCtrl );

  self.limpaEdt;
  self.carregaEdt;
end;

procedure Tform_cadastro_produtos.desbloqueiaBtnPesquisa;
begin
  self.btn_pesquisa_grupoProduto.Visible:= True;
  self.btn_pesquisa_marca.Visible:= True;
  self.btn_pesquisa_cor.Visible:= True;
  self.btn_pesquisa_tamanho.Visible:= True;
  self.btn_pesquisa.Visible:= True;
  self.btn_pesquisa_colecao.Visible:= True;

  self.btn_adicionar_variacao.Enabled:= True;
  self.btn_botao_alterar_variacao.Enabled:= True;
  self.btn_botao_excluir_variacao.Enabled:= True;
  self.btn_limpar_grid.Enabled:= True;
end;

procedure Tform_cadastro_produtos.desbloqueiaEdt;
begin
  inherited;
  self.edt_descricao_produto.Enabled:= True;
  self.edt_cod_barra.Enabled:= True;
  self.edt_referencia.Enabled:= True;
  self.edt_cod_grupo_produto.Enabled:= True;
  self.edt_pesquisar_grupoProduto_produto.Enabled:= True;
  self.edt_cod_marca.Enabled:= True;
  self.edt_pesquisar_marca_produto.Enabled:= True;
  self.edt_valor_custo.Enabled:= True;
  self.edt_lucro.Enabled:= True;
  self.edt_valor_venda.Enabled:= True;
  self.edt_cod_cor.Enabled:= True;
  self.edt_pesquisar_cor.Enabled:= True;
  self.edt_cod_tamanho.Enabled:= True;
  self.edt_pesquisar_tamanho.Enabled:= True;
  self.edt_cod_fornecedor.Enabled:= True;
  self.edt_pesquisar_registro.Enabled:= True;
  self.edt_cod_colecao.Enabled:= True;
  self.edt_colecao.Enabled:= True;
  self.memo_obs.Enabled:= True;
  self.edt_unidade_medida.Enabled:= True;
  self.edt_codigo_roupa.Enabled:= True;
end;

procedure Tform_cadastro_produtos.edt_lucroChange(Sender: TObject);
begin
  //inherited;
  calculaValorVenda;
end;

procedure Tform_cadastro_produtos.edt_valor_custoChange(Sender: TObject);
begin
  //inherited;
  calculaValorVenda;
end;

procedure Tform_cadastro_produtos.ExcluirColuna(pColuna: string);
var i: integer;
//    existe: boolean;
    ExisteQtd: integer;
    col : TColumn;
begin
   cdsVariacoes.First;
   ExisteQtd := 0;
   for I := 0 to cdsVariacoes.RecordCount - 1 do
   begin
      if cdsVariacoes.FieldByName('tamanho').AsString = pColuna then
      begin
        ExisteQtd := ExisteQtd + 1;
      end;
      cdsVariacoes.next;
   end;

   if not (ExisteQtd > 1) then
   begin
      for I := 0 to GridVariacoes.Columns.Count - 1 do
      begin
         col := GridVariacoes.Columns[I];
         if col.Title.Caption = pColuna then

      end;
   end;
end;

procedure Tform_cadastro_produtos.ExcluirItem;
var i: integer;
begin
  if cdsVariacoes.RecordCount > 0 then
  begin
    cdsVariacoes.Delete;
    cdsVariacoes.First;
    for I := 0 to cdsVariacoes.RecordCount - 1 do
    begin
      cdsVariacoes.edit;
      cdsVariacoesNUM_VARIACAO.AsInteger := I+1;
      cdsVariacoes.post;
    end;
  end
  else
    MessageDlg( 'Lista de variações está vazia!', MtInformation, [ MbOK ], 0 );
end;

procedure Tform_cadastro_produtos.FormActivate(Sender: TObject);
begin
  inherited;
  if Self.btn_botao_salvar.Caption='Salvar' then
     edt_descricao_produto.SetFocus;
end;

procedure Tform_cadastro_produtos.FormCreate(Sender: TObject);
begin
  inherited;
  if cdsVariacoes.Active then
    cdsVariacoes.Close;
  cdsVariacoes.Open;
  cdsVariacoes.EmptyDataSet;
end;

procedure Tform_cadastro_produtos.limpaEdt;
begin
  inherited;
  self.edt_descricao_produto.Clear;
  self.edt_cod_barra.Clear;
  self.edt_referencia.Clear;
  self.edt_cod_grupo_produto.Clear;
  self.edt_pesquisar_grupoProduto_produto.Clear;
  self.edt_cod_marca.Clear;
  self.edt_pesquisar_marca_produto.Clear;
  self.edt_valor_custo.Clear;
  self.edt_lucro.Clear;
  self.edt_valor_venda.Clear;
  self.edt_cod_cor.Clear;
  self.edt_pesquisar_cor.Clear;
  self.edt_cod_tamanho.Clear;
  self.edt_pesquisar_tamanho.Clear;
  self.edt_cod_fornecedor.Clear;
  self.edt_pesquisar_registro.Clear;
  self.edt_cod_colecao.Clear;
  self.edt_colecao.Clear;
  self.memo_obs.Clear;
  Self.edt_data_cadastro.Clear;
  self.edt_data_ult_alt.Clear;
  Self.cdsVariacoes.EmptyDataSet;
  Alterar := true;
  self.edt_unidade_medida.Clear;
  self.edt_codigo_roupa.Clear;
end;

procedure Tform_cadastro_produtos.limparItens;
begin
  self.edt_cod_cor.clear;
  Self.edt_pesquisar_cor.clear;
  self.edt_cod_tamanho.clear;
  self.edt_pesquisar_tamanho.clear;
  self.edt_codigo_roupa.clear;
end;

procedure Tform_cadastro_produtos.sair;
begin
  inherited;

end;

procedure Tform_cadastro_produtos.salvar;
var variacao: VariacaoRoupa;
begin
  inherited;
  if validaFormulario then
  begin
      aRoupa.setCodigo( StrToInt ( self.edt_codigo.Text ) );

      aRoupa.setDescricao( self.edt_descricao_produto.Text );
      aRoupa.setCodBarra( self.edt_cod_barra.Text );
      aRoupa.setReferencia( self.edt_referencia.Text );

      aRoupa.getoGrupoRoupa.setCodigo( StrToInt ( self.edt_cod_grupo_produto.Text ) );
      aRoupa.getoGrupoRoupa.setGrupoRoupa( self.edt_pesquisar_grupoProduto_produto.Text );

      aRoupa.getaMarca.setCodigo( StrToInt ( self.edt_cod_marca.Text ) );
      aRoupa.getaMarca.setMarca( self.edt_pesquisar_marca_produto.Text );

      aRoupa.setCustoUnitario( StrToFloat ( self.edt_valor_custo.Text ) );
      aRoupa.setLucro( StrToFloat ( self.edt_lucro.Text ) );
      aRoupa.setValorVenda( StrToFloat ( self.edt_valor_venda.Text ) );

//      aRoupa.getaCor.setCodigo( StrToInt ( self.edt_cod_cor.Text ) );
//      aRoupa.getaCor.setCor( self.edt_pesquisar_cor.Text );

//      aRoupa.getoTamanho.setCodigo( StrToInt ( self.edt_cod_tamanho.Text ) );
//      aRoupa.getoTamanho.setSiglaTamanho( self.edt_pesquisar_tamanho.Text );

      aRoupa.getoFornecedor.setCodigo( StrToInt ( self.edt_cod_fornecedor.Text ) );

      aRoupa.getoFornecedor.setNomeRazaoSocial( self.edt_pesquisar_registro.Text );
      aRoupa.getaColecao.setCodigo( StrToInt ( self.edt_cod_colecao.Text ) );
      aRoupa.getaColecao.setColecao( self.edt_colecao.Text );
      aRoupa.setUnidadeMedida(edt_unidade_medida.text);

      aRoupa.setObs( self.memo_obs.Text );
//      aRoupa.setDataCad( Date );
//      aRoupa.setUltAlt( Date );
      aRoupa.setCodUsu( StrToInt ( Self.edt_cod_usuario.Text ) );

      cdsVariacoes.DisableControls;
      aRoupa.getListaVariacao.Clear;
      try
        cdsVariacoes.First;
        while not(cdsVariacoes.Eof) do
          begin
            variacao := VariacaoRoupa.crieObj;
            with variacao, cdsVariacoes do
              begin
                setNumeroVariacao(FieldByName('num_variacao').AsInteger);
                getaCor.setCodigo(FieldByName('id_cor').AsInteger);
                getaTamanho.setCodigo(FieldByName('id_tamanho').AsInteger);
                SetCodigovariacao( FieldByName('codigo').Asstring);
              end;
            aRoupa.getListaVariacao.Add(variacao);
            cdsVariacoes.Next;
          end;
      finally
        cdsVariacoes.EnableControls;
      end;

      if self.btn_botao_salvar.Caption = 'Salvar' then
         aCtrlRoupas.salvar( aRoupa.clone )
      else
         aCtrlRoupas.excluir( aRoupa.clone );

      self.sair;
  end;
end;

procedure Tform_cadastro_produtos.setFrmConsultaColecoes(pConsulta: TObject);
begin
  aConsultaColecoes:= Tform_consulta_colecoes( pConsulta );
end;

procedure Tform_cadastro_produtos.setFrmConsultaCores(pConsulta: TObject);
begin
  aConsultaCores:= Tform_consulta_cores( pConsulta );
end;

procedure Tform_cadastro_produtos.setFrmConsultaFornecedores(
  pConsulta: TObject);
begin
  aConsultaFornecedores:= Tform_consulta_fornecedores( pConsulta );
end;

procedure Tform_cadastro_produtos.setFrmConsultaGruposProdutos(
  pConsulta: TObject);
begin
  aConsultaGruposProdutos:= Tform_consulta_grupos_produtos( pConsulta );
end;

procedure Tform_cadastro_produtos.setFrmConsultaMarcas(pConsulta: TObject);
begin
  aConsultaMarcas:= Tform_consulta_marcas( pConsulta );
end;

procedure Tform_cadastro_produtos.setFrmConsultaTamanhos(pConsulta: TObject);
begin
  aConsultaTamanhos:= Tform_consulta_tamanhos( pConsulta );
end;

procedure Tform_cadastro_produtos.btn_pesquisa_colecaoClick(Sender: TObject);
var aux : string;
begin
  aConsultaColecoes.conhecaObj( aCtrlRoupas.getCtrlColecoes, aRoupa.getaColecao );
  aux := aConsultaColecoes.btn_botao_sair.Caption;
  aConsultaColecoes.btn_botao_sair.Caption:= 'Selecionar';
  aConsultaColecoes.ShowModal;
  aConsultaColecoes.btn_botao_sair.Caption:= aux;

  self.edt_cod_colecao.Text:= IntToStr( aRoupa.getaColecao.getCodigo );
  self.edt_colecao.Text:= aRoupa.getaColecao.getColecao;
end;

function Tform_cadastro_produtos.validaFormulario: Boolean;
begin
  Result:= False;

  if Self.edt_descricao_produto.Text = '' then
  begin
    MessageDlg( 'O campo Descrição da Roupa é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_descricao_produto.SetFocus;
    Exit;
  end;

  if Self.edt_unidade_medida.Text = '' then
  begin
    MessageDlg( 'O campo Unidade de Medida é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_unidade_medida.SetFocus;
    Exit;
  end;

  if Self.edt_pesquisar_grupoProduto_produto.Text = '' then
  begin
    MessageDlg( 'O campo Grupo de Produtos é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_pesquisar_grupoProduto_produto.SetFocus;
    Exit;
  end;

  if Self.edt_pesquisar_marca_produto.Text = '' then
  begin
    MessageDlg( 'O campo Marca é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_pesquisar_marca_produto.SetFocus;
    Exit;
  end;

  if Self.edt_valor_venda.Text = '' then
  begin
    MessageDlg( 'O campo Valor de Venda é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_valor_venda.SetFocus;
    Exit;
  end;

  if StrToFloat (Self.edt_valor_venda.Text) = 0 then
  begin
    MessageDlg( 'O valor de venda não pode ser 0!', MtInformation, [ MbOK ], 0 );
    edt_valor_venda.SetFocus;
    Exit;
  end;

  if cdsVariacoes.IsEmpty then
  begin
    MessageDlg( 'Insira ao menos uma variação da Roupa!', MtInformation, [ MbOK ], 0 );
    Exit;
  end;

  if Self.edt_pesquisar_registro.Text = '' then
  begin
    MessageDlg( 'O campo Fornecedor é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_pesquisar_registro.SetFocus;
    Exit;
  end;

  if Self.edt_colecao.Text = '' then
  begin
    MessageDlg( 'O campo Coleção é obrigatório!', MtInformation, [ MbOK ], 0 );
    edt_colecao.SetFocus;
    Exit;
  end;

 Result:= true;
end;



end.
