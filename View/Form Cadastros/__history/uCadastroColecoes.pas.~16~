unit uCadastroColecoes;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uCadastroPai, Vcl.Buttons, Vcl.StdCtrls,
  campoEdit, Vcl.ExtCtrls, uColecoes, uCtrlColecoes;

type
  Tform_cadastro_colecoes = class(Tform_cadastro_pai)
    edt_colecao: PriTEdit;
    lbl_colecao: TLabel;
  private
    { Private declarations }
    aColecao: Colecoes;
    aCtrlColecoes: ctrlColecoes;
    NomeColecao: string;
  public
    { Public declarations }
    procedure conhecaObj(pCtrl, pObj: TObject); override;
    procedure salvar; override;
    procedure sair; override;
    procedure limpaEdt; override;
    procedure carregaEdt; override;
    procedure bloqueiaEdt; override;
    procedure desbloqueiaEdt; override;
    function validaFormulario: Boolean; override;
  end;

var
  form_cadastro_colecoes: Tform_cadastro_colecoes;

implementation

{$R *.dfm}

{ Tform_cadastro_colecoes }
procedure Tform_cadastro_colecoes.bloqueiaEdt;
begin
  inherited;
  Self.edt_colecao.Enabled := False;
end;

procedure Tform_cadastro_colecoes.carregaEdt;
begin
  inherited;
  if aColecao.getCodigo <> 0 then
    Self.edt_codigo.Text := IntToStr(aColecao.getCodigo);
  Self.edt_colecao.Text := aColecao.getColecao;
  Self.edt_data_cadastro.Text := DateToStr(aColecao.getDataCad);
  Self.edt_data_ult_alt.Text := DateToStr(aColecao.getUltAlt);
  NomeColecao := aColecao.getColecao;
end;

procedure Tform_cadastro_colecoes.conhecaObj(pCtrl, pObj: TObject);
begin
  inherited;
  aColecao := Colecoes(pObj);
  aCtrlColecoes := ctrlColecoes(pCtrl);
  Self.limpaEdt;
  Self.carregaEdt;
end;

procedure Tform_cadastro_colecoes.desbloqueiaEdt;
begin
  inherited;
  Self.edt_colecao.Enabled := True;
end;

procedure Tform_cadastro_colecoes.limpaEdt;
begin
  inherited;
  Self.edt_colecao.Clear;
  Self.edt_data_cadastro.Clear;
  Self.edt_data_ult_alt.Clear;
end;

procedure Tform_cadastro_colecoes.sair;
begin
  inherited;
end;

procedure Tform_cadastro_colecoes.salvar;
begin
  inherited;
  if validaFormulario then
  begin
    aColecao.setCodigo(StrToInt(Self.edt_codigo.Text));
    aColecao.setColecao(Self.edt_colecao.Text);
//    aColecao.setDataCad(Date);
//    aColecao.setUltAlt(Date);
    aColecao.setCodUsu(StrToInt(Self.edt_cod_usuario.Text));
    if btn_botao_salvar.Caption = 'Salvar' then
    begin
      if (aColecao.getCodigo = 0) then
      begin
        if (aCtrlColecoes.VerificaExiste(aColecao.getColecao)) then
        // verifica se existe Coleção quando é incluir
        begin
          ShowMessage('Já existe uma Coleção ' + aColecao.getColecao +
            ' cadastrada!');
          edt_colecao.SetFocus;
          Exit;
        end;
      end
      else
      begin
        if not(NomeColecao = aColecao.getColecao) then
        // verifica se mudou o nome na alteracao
          if (aCtrlColecoes.VerificaExiste(aColecao.getColecao)) then
          // se mudou verifica se já existe Coleção com o nome
          begin
            aCtrlColecoes.SetPosicao(aColecao.getCodigo);
            ShowMessage('Já existe uma Coleção ' + aColecao.getColecao +
              ' cadastrada!');
            edt_colecao.SetFocus;
            Exit;
          end;
      end;
      aCtrlColecoes.salvar(aColecao.clone);
    end
    else if aCtrlColecoes.ValidaExclusao(aColecao.clone) then
      aCtrlColecoes.excluir(aColecao.clone)
    else
      ShowMessage
        ('A Coleção está vinculada à uma ou mais roupas, não pode ser excluída!');

    Self.sair;
  end;
end;

function Tform_cadastro_colecoes.validaFormulario: Boolean;
begin
  Result := False;
  if Self.edt_colecao.Text = '' then
  begin
    MessageDlg('O campo Coleção é obrigatório!', MtInformation, [MbOK], 0);
    edt_colecao.SetFocus;
    Exit;
  end;
  Result := True;
end;

end.
